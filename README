This script allows you to build your own private Ruby on Rails/Merb stack for use on WebFaction with very little effort. Your own application environment gives you total control over the key elements of hosting a Ruby on Rails or Merb application. Just edit the four variable assignments at the beginning of the script and run it. Working example configuration files are written and everything is up and running by the time the script completes. It's a good idea to add a line to your crontab in the event your machine is rebooted (see the comments at the end of the script). Here's a quick overview of what the script does...

The application environment is built in a directory of your choosing. The environment consists of:
* ruby 1.8.6 p114
* rubygems 1.0.1
* ruby gems: rails, merb, mongrel, mongrel_cluster, thin, capistrano, termios, ferret, acts_as_ferret, god, sqlite3-ruby, mysql, typo, and the latest eventmachine (to take advantage of unix sockets)
* git 1.5.5
* nginx 0.5.35 (with nginx-upstream-fair module for fair load balancing)
* monit 4.10.1

I will try to keep up to date with the versions, although I'm writing this knowing that the rubygems version is a little out of date. No worries - rubygems should update itself.

The working example configuration sets up two thin instances listening on unix sockets (mongrel does not have this capability) with nginx as the fair load balancing reverse proxy. Monit watches nginx and the thin cluster.

You will want to start monit at reboot with an entry in your crontab file. My WebFaction server recently had to reboot and I noticed that nginx would not start. The reason was that the nginx pid file had not been deleted and the nginx rc script thought nginx was running already so attempts to start it had failed. The simple solution is to delete all stray pid files at reboot with another crontab line. It should go first.